{"version":3,"sources":["component/Title/Title.js","component/Search/Search.js","component/Weather/Weather.js","component/TemperatureConversion/TemperatureConversion.js","component/Areas/Areas.js","component/Forecast/Forecast.js","component/Condition/Condition.js","App.js","serviceWorker.js","index.js"],"names":["Title","className","Search","state","cityQuery","countryQuery","updateCityQuery","event","setState","target","value","updateCountryQuery","headleKeyPress","key","weatherSearch","e","preventDefault","props","from","opacity","to","config","delay","duration","style","onKeyPress","type","name","placeholder","onChange","onClick","Component","Weather","city","country","temperature","description","err","weatherConvertor","units","today","Date","date","getFullYear","getMonth","getDate","Math","round","TemperatureConversion","Areas","cities","SelectedArea","mainCity","filteredCities","filter","i","map","id","src","weather","icon","alt","main","temp_max","temp_min","Forecast","forecast","slice","day","dt","dt_txt","getHours","getMinutes","getSeconds","temp","Condition","humidity","wind","speed","Api_key","Api_Url","App","undefined","a","fetch","cityData","json","City","coord","lat","lon","ThreeHoulyforecast","ThreeHoulyforecastData","citiesData","push","list","sys","message","textContent","includes","backgroundSelect","console","log","this","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"wYAYeA,G,WATD,kBACb,6BACC,wBAAIC,UAAU,aACb,uBAAGA,UAAU,sBAEd,8D,eCkEaC,E,4MApEdC,MAAQ,CACPC,UAAW,GACXC,aAAc,I,EAGfC,gBAAkB,SAACC,GAClB,EAAKC,SAAS,CAAEJ,UAAWG,EAAME,OAAOC,S,EAGzCC,mBAAqB,SAACJ,GACrB,EAAKC,SAAS,CAAEH,aAAcE,EAAME,OAAOC,S,EAG5CE,eAAiB,SAACL,GACC,UAAdA,EAAMM,KACT,EAAKC,iB,EAIPA,cAAgB,SAACC,GAChBA,EAAEC,iBACF,EAAKC,MAAMH,cAAc,EAAKX,MAAMC,UAAW,EAAKD,MAAME,cAC1D,EAAKG,SAAS,CAAEJ,UAAW,KAC3B,EAAKI,SAAS,CAAEH,aAAc,M,uDAIrB,IAAD,OACR,OACC,kBAAC,SAAD,CAAQa,KAAM,CAAEC,QAAS,GAAKC,GAAI,CAAED,QAAS,GAAKE,OAAQ,CAAEC,MAAO,KAAMC,SAAU,QACjF,SAACN,GAAD,OACA,yBAAKO,MAAOP,GACX,0BAAMhB,UAAU,aAAawB,WAAY,EAAKb,gBAC7C,yBAAKX,UAAU,uBACd,2BACCA,UAAU,GACVyB,KAAK,OACLC,KAAK,OACLjB,MAAO,EAAKP,MAAMC,UAClBwB,YAAY,OACZC,SAAU,EAAKvB,gBACfmB,WAAY,EAAKb,kBAGnB,yBAAKX,UAAU,uBACd,2BACCA,UAAU,GACVyB,KAAK,OACLhB,MAAO,EAAKP,MAAME,aAClBsB,KAAK,UACLC,YAAY,UACZC,SAAU,EAAKlB,mBACfc,WAAY,EAAKb,kBAGnB,yBAAKX,UAAU,YACd,4BAAQA,UAAU,MAAMyB,KAAK,SAASI,QAAS,EAAKhB,eACnD,uBAAGb,UAAU,6B,GA1DD8B,aCyENC,G,MAzEC,SAAC,GAA+E,IAA7EC,EAA4E,EAA5EA,KAAMC,EAAsE,EAAtEA,QAASC,EAA6D,EAA7DA,YAAaC,EAAgD,EAAhDA,YAAaC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,iBAAkBC,EAAY,EAAZA,MAkC5EC,EAAQ,IAAIC,KACjBC,EAAOF,EAAMG,cAAgB,KAAOH,EAAMI,WAAa,GAAK,IAAMJ,EAAMK,UACzE,OACC,kBAAC,SAAD,CAAQ3B,KAAM,CAAEC,QAAS,GAAKC,GAAI,CAAED,QAAS,GAAKE,OAAQ,CAAEC,MAAO,IAAMC,SAAU,OACjF,SAACN,GAAD,OACA,yBAAKO,MAAOP,GACX,yBAAKhB,UAAU,qBACb,2BAAIyC,GAEJT,GACA,2BACC,0CAIDA,GACDC,GACC,wBAAIjC,UAAU,aACZgC,EADF,KACUC,GAIVC,GACA,4BACC,8BACEW,KAAKC,MAAMZ,GACZ,yBAAKL,QAASQ,EAAiBL,IAAQM,KAIzCH,GAAe,2BAAIA,EAAJ,KACfC,GAAO,2BAAIA,EAAJ,YC7DCW,G,MATe,SAAC,GAA4B,IAA1Bb,EAAyB,EAAzBA,YAChC,MAAc,UAD2C,EAAZI,MAErCO,KAAKC,MAAoB,IAAdZ,EAAoB,IAG/BW,KAAKC,MAAMZ,KC8CLc,EA9CD,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,aAAcZ,EAAY,EAAZA,MACtC,IAAKW,EAAQ,OAAO,KAEpB,IAAME,EAAWF,EAAO,GAAGvB,KACrB0B,EAAiBH,EAAOI,QAAO,SAACrB,EAAMsB,GAC3C,OAAOH,IAAanB,EAAKN,QAG1B,OACC,kBAAC,SAAD,CAAQT,KAAM,CAAEC,QAAS,GAAKC,GAAI,CAAED,QAAS,GAAKE,OAAQ,CAAEC,MAAO,KAAMC,SAAU,QACjF,SAACN,GAAD,OACA,yBAAKO,MAAOP,GACX,yBAAKhB,UAAU,wBACboD,EAAeG,KAAI,SAACvB,GAAD,OACnB,yBACCH,QAAS,WACRqB,EAAalB,IAEdhC,UAAU,OACVY,IAAKoB,EAAKwB,IACV,4BAAKxB,EAAKN,MAEV,yBACC+B,IAAG,0CAAqCzB,EAAK0B,QAAQ,GAAGC,KAArD,QACHC,IAAK5B,EAAK0B,QAAQ,GAAGvB,cAEtB,2BACC,0BAAMnC,UAAU,YACd,kBAAC,EAAD,CAAuBkC,YAAaF,EAAK6B,KAAKC,SAAUxB,MAAOA,IAChE,sCAED,0BAAMtC,UAAU,YACd,kBAAC,EAAD,CAAuBkC,YAAaF,EAAK6B,KAAKE,SAAUzB,MAAOA,IAChE,uCAGF,2BAAIN,EAAK0B,QAAQ,GAAGvB,uBCUb6B,G,MA7CE,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAU3B,EAAY,EAAZA,MAC7B,OAAK2B,EAGJ,kBAAC,SAAD,CAAQhD,KAAM,CAAEC,QAAS,GAAKC,GAAI,CAAED,QAAS,GAAKE,OAAQ,CAAEC,MAAO,KAAMC,SAAU,QACjF,SAACN,GAAD,OACA,yBAAKO,MAAOP,GACX,yBAAKhB,UAAU,2BACbiE,EAASC,MAAM,EAAG,GAAGX,KAAI,SAACY,GAAD,OACzB,yBAAKnE,UAAU,QAAQY,IAAKuD,EAAIC,IAC/B,4BAEE,IAAI5B,KAAK2B,EAAIE,QAAQC,YAAc,GAAK,IAAI9B,KAAK2B,EAAIE,QAAQC,WAC7D,IACA,IAAI9B,KAAK2B,EAAIE,QAAQE,aACrB,IAAI/B,KAAK2B,EAAIE,QAAQG,aACrB,MACA,IAAIhC,KAAK2B,EAAIE,QAAQC,WACrB,IACA,IAAI9B,KAAK2B,EAAIE,QAAQE,aACrB,IAAI/B,KAAK2B,EAAIE,QAAQG,aACrB,OAEF,yBACCf,IAAG,0CAAqCU,EAAIT,QAAQ,GAAGC,KAApD,QACHC,IAAKO,EAAIT,QAAQ,GAAGvB,cAErB,2BACC,8BACE,kBAAC,EAAD,CAAuBD,YAAaiC,EAAIN,KAAKY,KAAMnC,MAAOA,IAC3D,6BAAMA,KAGR,2BACC,8BAAO6B,EAAIT,QAAQ,GAAGvB,aAAoB,cAjC5B,OC6DRuC,G,MA9DG,YAA2B,IAAxBA,EAAuB,EAAvBA,UAAWpC,EAAY,EAAZA,MAC/B,OAAKoC,EAGJ,kBAAC,SAAD,CAAQzD,KAAM,CAAEC,QAAS,GAAKC,GAAI,CAAED,QAAS,GAAKE,OAAQ,CAAEC,MAAO,KAAMC,SAAU,QACjF,SAACN,GAAD,OACA,yBAAKO,MAAOP,GACX,yBAAKhB,UAAU,uBACd,yBAAKA,UAAU,iBACd,kBAAC,SAAD,CAAQiB,KAAM,CAAEC,QAAS,GAAKC,GAAI,CAAED,QAAS,GAAKE,OAAQ,CAAEC,MAAO,KAAMC,SAAU,QACjF,SAACN,GAAD,OACA,yBAAKO,MAAOP,GACX,wBAAIhB,UAAU,aAAd,0BAKJ,yBAAKA,UAAU,yBACd,wBAAIA,UAAU,6BACb,kBAAC,SAAD,CACCiB,KAAM,CAAEC,QAAS,GACjBC,GAAI,CAAED,QAAS,GACfE,OAAQ,CAAEC,MAAO,KAAMC,SAAU,QAChC,SAACN,GAAD,OACA,yBAAKO,MAAOP,GACX,wBAAIhB,UAAU,mBACb,uBAAGA,UAAU,eADd,WACsC,IACrC,0BAAMA,UAAU,eAAe0E,EAAUb,KAAKc,SAA9C,UAKJ,wBAAI3E,UAAU,mBACb,uBAAGA,UAAU,2BADd,kBACwD,0BAAMA,UAAU,eACrE,kBAAC,EAAD,CAAuBkC,YAAawC,EAAUb,KAAKE,SAAUzB,MAAOA,IACrE,6BAAMA,KAIR,wBAAItC,UAAU,mBACb,uBAAGA,UAAU,4BADd,kBACyD,0BAAMA,UAAU,eACtE,kBAAC,EAAD,CAAuBkC,YAAawC,EAAUb,KAAKC,SAAUxB,MAAOA,IACrE,6BAAMA,KAIR,wBAAItC,UAAU,mBACb,uBAAGA,UAAU,gBADd,oBAC+C,0BAAMA,UAAU,eAAe0E,EAAUhB,QAAQ,GAAGvB,cAGnG,wBAAInC,UAAU,mBACb,uBAAGA,UAAU,gBADd,aACwC,0BAAMA,UAAU,eAAe0E,EAAUE,KAAKC,MAA9C,iBAlDxB,OCGlBC,EAAU,mCACVC,EAAU,2CAoMDC,E,4MAjMd9E,MAAQ,CACPgC,iBAAa+C,EACbjD,KAAM,SACNC,QAAS,KACT0C,cAAUM,EACV9C,iBAAa8C,EACb7C,IAAK,GACLa,YAAQgC,EACRhB,cAAUgB,EACVP,eAAWO,EACX3C,WAAO2C,G,EAORpE,c,uCAAgB,WAAOmB,EAAMC,GAAb,yBAAAiD,EAAA,0DACXlD,IAAQC,EADG,iCAEOkD,MAAM,GAAD,OAAIJ,EAAJ,sBAAyB/C,EAAzB,YAAiCC,EAAjC,kBAAkD6C,EAAlD,kBAFZ,cAEVM,EAFU,gBAGGA,EAASC,OAHZ,WAGVC,EAHU,QAMJC,MANI,yCAON,EAAKhF,SAAS,CACpB2B,iBAAa+C,EACbjD,UAAMiD,EACNhD,aAASgD,EACTN,cAAUM,EACV9C,iBAAa8C,EACbhC,YAAQgC,EACRhB,cAAUgB,EACVP,eAAWO,EACX7C,IAAK,8CACLE,WAAO2C,KAjBK,wBAqBiBE,MAAM,GAAD,OAChCJ,EADgC,yBACRO,EAAKC,MAAMC,IADH,gBACcF,EAAKC,MAAME,IADzB,kBACsCX,EADtC,wBArBtB,eAqBVY,EArBU,iBAwBqBA,EAAmBL,OAxBxC,eAwBVM,EAxBU,iBA0BSR,MAAM,GAAD,OACxBJ,EADwB,qBACJO,EAAKC,MAAMC,IADP,gBACkBF,EAAKC,MAAME,IAD7B,kBAC0CX,EAD1C,wBA1Bd,eA0BVc,EA1BU,iBA6BKA,EAAWP,OA7BhB,QA6BVpC,EA7BU,OA+BdqC,EAAK5B,QAAQmC,KAAKF,EAAuBG,MACzCR,EAAK5B,QAAQmC,KAAK5C,EAAO6C,MAErBR,EAAK5D,KACR,EAAKnB,SAAS,CACb2B,YAAaoD,EAAKzB,KAAKY,KACvBzC,KAAMsD,EAAK5D,KACXO,QAASqD,EAAKS,IAAI9D,QAClB0C,SAAUW,EAAKzB,KAAKc,SACpBxC,YAAamD,EAAK5B,QAAQ,GAAGvB,YAC7Bc,OAAQA,EAAO6C,KACf1D,IAAK,GACL6B,SAAU0B,EAAuBG,KACjCpB,UAAWY,EACXhD,MAAO,UAIR,EAAK/B,SAAS,CACb2B,iBAAa+C,EACbjD,UAAMiD,EACNhD,aAASgD,EACTN,cAAUM,EACV9C,iBAAa8C,EACbhC,YAAQgC,EACRhB,cAAUgB,EACV7C,IAAKkD,EAAKU,QACVtB,eAAWO,EACX3C,WAAO2C,IA3DK,wBAgEd,EAAK1E,SAAS,CACb2B,iBAAa+C,EACbjD,UAAMiD,EACNhD,aAASgD,EACTN,cAAUM,EACV9C,iBAAa8C,EACbhC,YAAQgC,EACRhB,cAAUgB,EACVP,eAAWO,EACX7C,IAAK,8CACLE,WAAO2C,IA1EM,4C,0DA+EhB5C,iBAAmB,yDAAM,WAAOvB,GAAP,SAAAoE,EAAA,sDACpBpE,EAAEN,OAAOyF,YAAYC,SAAS,IAAK,GAClC,EAAKhG,MAAM8B,MAAQ,EAAK9B,MAAM+B,SACjC,EAAK1B,SAAS,CACb2B,YAA8C,IAAjC,EAAKhC,MAAMwE,UAAUb,KAAKY,KAAa,GACpDnC,MAAO,UAERxB,EAAEN,OAAOyF,YAAc,SAGvB,EAAK1F,SAAS,CACb2B,iBAAa+C,EACbjD,UAAMiD,EACNhD,aAASgD,EACTN,cAAUM,EACV9C,iBAAa8C,EACbhC,YAAQgC,EACRhB,cAAUgB,EACVP,eAAWO,EACX3C,WAAO2C,EACP7C,IAAK,iDAKP,EAAK7B,SAAS,CACb2B,YAAa,EAAKhC,MAAMwE,UAAUb,KAAKY,KACvCnC,MAAO,UAERxB,EAAEN,OAAOyF,YAAc,SA7BA,2CAAN,uD,EAiCnBE,iBAAmB,WAClB,MACuB,UAArB,EAAKjG,MAAMoC,OAAkB,EAAKpC,MAAMgC,YAAc,IACjC,UAArB,EAAKhC,MAAMoC,OAAkB,EAAKpC,MAAMgC,YAAc,GAEhD,2BAGA,wB,EAITgB,aAAe,SAAClB,GAEf,GADAoE,QAAQC,IAAI,EAAKnG,QACZ8B,EAAM,OAAO,KAGlB,EAAKnB,cAAcmB,EAAKN,KAAMM,EAAK+D,IAAI9D,U,kEApIvCqE,KAAKzF,cAAcyF,KAAKpG,MAAM8B,KAAMsE,KAAKpG,MAAM+B,W,+BAwI/C,OACC,yBAAKjC,UAAWsG,KAAKH,oBACpB,yBAAKnG,UAAU,OACd,yBAAKA,UAAU,aACd,yBAAKA,UAAU,OACd,yBAAKA,UAAU,aACd,kBAAC,EAAD,OAGD,yBAAKA,UAAU,YACd,kBAAC,EAAD,CAAQa,cAAeyF,KAAKzF,gBAE5B,kBAAC,EAAD,CACCqB,YAAaoE,KAAKpG,MAAMgC,YACxBF,KAAMsE,KAAKpG,MAAM8B,KACjBC,QAASqE,KAAKpG,MAAM+B,QACpB0C,SAAU2B,KAAKpG,MAAMyE,SACrBxC,YAAamE,KAAKpG,MAAMiC,YACxBC,IAAKkE,KAAKpG,MAAMkC,IAChBC,iBAAkBiE,KAAKjE,iBACvBC,MAAOgE,KAAKpG,MAAMoC,SAGpB,yBAAKtC,UAAU,YACd,kBAAC,EAAD,CAAW0E,UAAW4B,KAAKpG,MAAMwE,UAAWpC,MAAOgE,KAAKpG,MAAMoC,SAE/D,yBAAKtC,UAAU,aACd,kBAAC,EAAD,CAAUiE,SAAUqC,KAAKpG,MAAM+D,SAAU3B,MAAOgE,KAAKpG,MAAMoC,QAE3D,kBAAC,EAAD,CACCW,OAAQqD,KAAKpG,MAAM+C,OACnBC,aAAcoD,KAAKpD,aACnBZ,MAAOgE,KAAKpG,MAAMoC,iB,GAvLTR,aCDEyE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLpB,QAAQoB,MAAMA,EAAMxB,c","file":"static/js/main.552b0bcd.chunk.js","sourcesContent":["import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst Title = () => (\r\n\t<div>\r\n\t\t<h1 className='display-3'>\r\n\t\t\t<i className='fas fa-cloud-sun' />\r\n\t\t</h1>\r\n\t\t<p>Country ,Resgion and Cities.</p>\r\n\t</div>\r\n);\r\n\r\nexport default Title;\r\n","import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../Search/Search.css';\r\nimport { Spring } from 'react-spring/renderprops';\r\n\r\nclass Search extends Component {\r\n\tstate = {\r\n\t\tcityQuery: '',\r\n\t\tcountryQuery: ''\r\n\t};\r\n\r\n\tupdateCityQuery = (event) => {\r\n\t\tthis.setState({ cityQuery: event.target.value });\r\n\t};\r\n\r\n\tupdateCountryQuery = (event) => {\r\n\t\tthis.setState({ countryQuery: event.target.value });\r\n\t};\r\n\r\n\theadleKeyPress = (event) => {\r\n\t\tif (event.key === 'Enter') {\r\n\t\t\tthis.weatherSearch();\r\n\t\t}\r\n\t};\r\n\r\n\tweatherSearch = (e) => {\r\n\t\te.preventDefault();\r\n\t\tthis.props.weatherSearch(this.state.cityQuery, this.state.countryQuery);\r\n\t\tthis.setState({ cityQuery: ''});\r\n\t\tthis.setState({ countryQuery: '' });\r\n\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Spring from={{ opacity: 0 }} to={{ opacity: 1 }} config={{ delay: 1800, duration: 1800 }}>\r\n\t\t\t\t{(props) => (\r\n\t\t\t\t\t<div style={props}>\r\n\t\t\t\t\t\t<form className='row Search' onKeyPress={this.headleKeyPress}>\r\n\t\t\t\t\t\t\t<div className='form-group col-sm-5'>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tclassName=''\r\n\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\tname='city'\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.cityQuery}\r\n\t\t\t\t\t\t\t\t\tplaceholder='City'\r\n\t\t\t\t\t\t\t\t\tonChange={this.updateCityQuery}\r\n\t\t\t\t\t\t\t\t\tonKeyPress={this.headleKeyPress}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='form-group col-sm-5'>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tclassName=''\r\n\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.countryQuery}\r\n\t\t\t\t\t\t\t\t\tname='country'\r\n\t\t\t\t\t\t\t\t\tplaceholder='Country'\r\n\t\t\t\t\t\t\t\t\tonChange={this.updateCountryQuery}\r\n\t\t\t\t\t\t\t\t\tonKeyPress={this.headleKeyPress}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='col-sm-2'>\r\n\t\t\t\t\t\t\t\t<button className='btn' type='submit' onClick={this.weatherSearch}>\r\n\t\t\t\t\t\t\t\t\t<i className='fas fa-search' />\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</Spring>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../Weather/Weather.css';\r\nimport { Spring } from 'react-spring/renderprops';\r\n\r\nconst Weather = ({ city, country, temperature, description, err, weatherConvertor, units }) => {\r\n\tconst dateBuilder = (d) => {\r\n\t\tlet months = [\r\n\t\t\t'January',\r\n\t\t\t'February',\r\n\t\t\t'March',\r\n\t\t\t'April',\r\n\t\t\t'May',\r\n\t\t\t'June',\r\n\t\t\t'July',\r\n\t\t\t'August',\r\n\t\t\t'September',\r\n\t\t\t'October',\r\n\t\t\t'November',\r\n\t\t\t'December'\r\n\t\t];\r\n\r\n\t\tlet days = [\r\n\t\t\t'Sunday',\r\n\t\t\t'Monday',\r\n\t\t\t'Tuesday',\r\n\t\t\t'Wednesday',\r\n\t\t\t'Thursday',\r\n\t\t\t'Friday',\r\n\t\t\t'Saturday'\r\n\t\t];\r\n\r\n\t\tlet day = days[d.getDay()];\r\n\t\tlet date = d.getDate();\r\n\t\tlet month = months[d.getMonth()];\r\n\t\tlet year = d.getDate();\r\n\r\n\t\treturn `${day} ${date} ${month} ${year}`;\r\n\t};\r\n\tconst today = new Date(),\r\n\t\tdate = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n\treturn (\r\n\t\t<Spring from={{ opacity: 0 }} to={{ opacity: 1 }} config={{ delay: 2000, duration: 2000 }}>\r\n\t\t\t{(props) => (\r\n\t\t\t\t<div style={props}>\r\n\t\t\t\t\t<div className='col-sm-12 Weather'>\r\n\t\t\t\t\t\t{<p>{date}</p>}\r\n\r\n\t\t\t\t\t\t{city && (\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t<span>Current</span>\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t{city &&\r\n\t\t\t\t\t\tcountry && (\r\n\t\t\t\t\t\t\t<h2 className='display-5'>\r\n\t\t\t\t\t\t\t\t{city}, {country}\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t{temperature && (\r\n\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t{Math.round(temperature)}\r\n\t\t\t\t\t\t\t\t\t<sup onClick={weatherConvertor(city)}>{units}</sup>\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{description && <p>{description} </p>}\r\n\t\t\t\t\t\t{err && <p>{err} </p>}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</Spring>\r\n\t);\r\n};\r\n\r\nexport default Weather;\r\n","const TemperatureConversion = ({ temperature, units }) => {\r\n\tif (units === '°F') {\r\n\t\treturn Math.round(temperature * 1.8 + 32);\r\n\t}\r\n\telse {\r\n\t\treturn Math.round(temperature);\r\n\t}\r\n};\r\n\r\nexport default TemperatureConversion;\r\n","import React from 'react';\r\nimport '../Areas/Areas.css';\r\nimport { Spring } from 'react-spring/renderprops';\r\nimport TemperatureConversion from '../TemperatureConversion/TemperatureConversion';\r\n\r\nconst Areas = ({ cities, SelectedArea, units }) => {\r\n\tif (!cities) return null;\r\n\r\n\tconst mainCity = cities[0].name;\r\n\tconst filteredCities = cities.filter((city, i) => {\r\n\t\treturn mainCity !== city.name;\r\n\t});\r\n\r\n\treturn (\r\n\t\t<Spring from={{ opacity: 0 }} to={{ opacity: 1 }} config={{ delay: 1800, duration: 1800 }}>\r\n\t\t\t{(props) => (\r\n\t\t\t\t<div style={props}>\r\n\t\t\t\t\t<div className='col-sm-12 Areas mt-2'>\r\n\t\t\t\t\t\t{filteredCities.map((city) => (\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tSelectedArea(city);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tclassName='Area'\r\n\t\t\t\t\t\t\t\tkey={city.id}>\r\n\t\t\t\t\t\t\t\t<h2>{city.name}</h2>\r\n\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\tsrc={`http://openweathermap.org/img/w/${city.weather[0].icon}.png`}\r\n\t\t\t\t\t\t\t\t\talt={city.weather[0].description}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t<span className='max-temp'>\r\n\t\t\t\t\t\t\t\t\t\t{<TemperatureConversion temperature={city.main.temp_max} units={units} />}\r\n\t\t\t\t\t\t\t\t\t\t<sup>°</sup>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t<span className='min-temp'>\r\n\t\t\t\t\t\t\t\t\t\t{<TemperatureConversion temperature={city.main.temp_min} units={units} />}\r\n\t\t\t\t\t\t\t\t\t\t<sup>°</sup>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t<p>{city.weather[0].description}</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</Spring>\r\n\t);\r\n};\r\n\r\nexport default Areas;\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../Forecast/Forecast.css';\r\nimport { Spring } from 'react-spring/renderprops';\r\nimport TemperatureConversion from '../TemperatureConversion/TemperatureConversion';\r\n\r\nconst Forecast = ({ forecast, units }) => {\r\n\tif (!forecast) return null;\r\n\r\n\treturn (\r\n\t\t<Spring from={{ opacity: 0 }} to={{ opacity: 1 }} config={{ delay: 1500, duration: 1500 }}>\r\n\t\t\t{(props) => (\r\n\t\t\t\t<div style={props}>\r\n\t\t\t\t\t<div className='col-sm-12 Forecast mt-2'>\r\n\t\t\t\t\t\t{forecast.slice(0, 6).map((day) => (\r\n\t\t\t\t\t\t\t<div className='hours' key={day.dt}>\r\n\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tnew Date(day.dt_txt).getHours() >= 12 ? new Date(day.dt_txt).getHours() +\r\n\t\t\t\t\t\t\t\t\t\t':' +\r\n\t\t\t\t\t\t\t\t\t\tnew Date(day.dt_txt).getMinutes() +\r\n\t\t\t\t\t\t\t\t\t\tnew Date(day.dt_txt).getSeconds() +\r\n\t\t\t\t\t\t\t\t\t\t' pm' :\r\n\t\t\t\t\t\t\t\t\t\tnew Date(day.dt_txt).getHours() +\r\n\t\t\t\t\t\t\t\t\t\t':' +\r\n\t\t\t\t\t\t\t\t\t\tnew Date(day.dt_txt).getMinutes() +\r\n\t\t\t\t\t\t\t\t\t\tnew Date(day.dt_txt).getSeconds() +\r\n\t\t\t\t\t\t\t\t\t\t' am'}\r\n\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\tsrc={`http://openweathermap.org/img/w/${day.weather[0].icon}.png`}\r\n\t\t\t\t\t\t\t\t\talt={day.weather[0].description}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t{<TemperatureConversion temperature={day.main.temp} units={units} />}\r\n\t\t\t\t\t\t\t\t\t\t<sup>{units}</sup>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t<span>{day.weather[0].description}</span>{' '}\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</Spring>\r\n\t);\r\n};\r\n\r\nexport default Forecast;\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../Condition/Condition.css';\r\nimport { Spring } from 'react-spring/renderprops';\r\nimport TemperatureConversion from '../TemperatureConversion/TemperatureConversion';\r\n\r\nconst Condition = ({ Condition, units }) => {\r\n\tif (!Condition) return null;\r\n\r\n\treturn (\r\n\t\t<Spring from={{ opacity: 0 }} to={{ opacity: 1 }} config={{ delay: 1500, duration: 1500 }}>\r\n\t\t\t{(props) => (\r\n\t\t\t\t<div style={props}>\r\n\t\t\t\t\t<div className='Condition col-sm-12'>\r\n\t\t\t\t\t\t<div className='panel-heading'>\r\n\t\t\t\t\t\t\t<Spring from={{ opacity: 0 }} to={{ opacity: 1 }} config={{ delay: 1500, duration: 1500 }}>\r\n\t\t\t\t\t\t\t\t{(props) => (\r\n\t\t\t\t\t\t\t\t\t<div style={props}>\r\n\t\t\t\t\t\t\t\t\t\t<h3 className='display-5'>Today's Condition</h3>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Spring>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='panel-body  col-sm-12'>\r\n\t\t\t\t\t\t\t<ul className='list-unstyled list-group '>\r\n\t\t\t\t\t\t\t\t<Spring\r\n\t\t\t\t\t\t\t\t\tfrom={{ opacity: 0 }}\r\n\t\t\t\t\t\t\t\t\tto={{ opacity: 1 }}\r\n\t\t\t\t\t\t\t\t\tconfig={{ delay: 1500, duration: 1500 }}>\r\n\t\t\t\t\t\t\t\t\t{(props) => (\r\n\t\t\t\t\t\t\t\t\t\t<div style={props}>\r\n\t\t\t\t\t\t\t\t\t\t\t<li className='list-group-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i className='fas fa-fan' />Humidity{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='pull-right '>{Condition.main.humidity}%</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Spring>\r\n\t\t\t\t\t\t\t\t<li className='list-group-item'>\r\n\t\t\t\t\t\t\t\t\t<i className='fas fa-temperature-low' />Min Temperature<span className='pull-right '>\r\n\t\t\t\t\t\t\t\t\t\t{<TemperatureConversion temperature={Condition.main.temp_min} units={units} />}\r\n\t\t\t\t\t\t\t\t\t\t<sup>{units}</sup>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t\t\t<li className='list-group-item'>\r\n\t\t\t\t\t\t\t\t\t<i className='fas fa-temperature-high' />Max Temperature<span className='pull-right '>\r\n\t\t\t\t\t\t\t\t\t\t{<TemperatureConversion temperature={Condition.main.temp_max} units={units} />}\r\n\t\t\t\t\t\t\t\t\t\t<sup>{units}</sup>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t\t\t<li className='list-group-item'>\r\n\t\t\t\t\t\t\t\t\t<i className='fas fa-tint' />Weather Condition<span className='pull-right '>{Condition.weather[0].description}</span>\r\n\t\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t\t\t<li className='list-group-item'>\r\n\t\t\t\t\t\t\t\t\t<i className='fas fa-wind' />Wind Speed<span className='pull-right '>{Condition.wind.speed} km/h</span>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</Spring>\r\n\t);\r\n};\r\n\r\nexport default Condition;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Title from './component/Title/Title';\nimport Search from './component/Search/Search';\nimport Weather from './component/Weather/Weather';\nimport Areas from './component/Areas/Areas';\nimport Forecast from './component/Forecast/Forecast';\nimport Condition from './component/Condition/Condition';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst Api_key = '63ab3b428a73887d42c040e8e2260e49';\nconst Api_Url = 'https://api.openweathermap.org/data/2.5/';\n\nclass App extends Component {\n\tstate = {\n\t\ttemperature: undefined,\n\t\tcity: 'Durban',\n\t\tcountry: 'ZA',\n\t\thumidity: undefined,\n\t\tdescription: undefined,\n\t\terr: '',\n\t\tcities: undefined,\n\t\tforecast: undefined,\n\t\tCondition: undefined,\n\t\tunits: undefined\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.weatherSearch(this.state.city, this.state.country);\n\t}\n\n\tweatherSearch = async (city, country) => {\n\t\tif (city && country) {\n\t\t\tlet cityData = await fetch(`${Api_Url}/weather?q=${city},${country}&appid=${Api_key}&units=metric`);\n\t\t\tlet City = await cityData.json();\n\n\t\t\t// console.log(City);\n\t\t\tif (!City.coord) {\n\t\t\t\treturn this.setState({\n\t\t\t\t\ttemperature: undefined,\n\t\t\t\t\tcity: undefined,\n\t\t\t\t\tcountry: undefined,\n\t\t\t\t\thumidity: undefined,\n\t\t\t\t\tdescription: undefined,\n\t\t\t\t\tcities: undefined,\n\t\t\t\t\tforecast: undefined,\n\t\t\t\t\tCondition: undefined,\n\t\t\t\t\terr: 'Please enter the correct data and try again',\n\t\t\t\t\tunits: undefined\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlet ThreeHoulyforecast = await fetch(\n\t\t\t\t`${Api_Url}/forecast?lat=${City.coord.lat}&lon=${City.coord.lon}&appid=${Api_key}&cnt=8&units=metric`\n\t\t\t);\n\t\t\tlet ThreeHoulyforecastData = await ThreeHoulyforecast.json();\n\n\t\t\tlet citiesData = await fetch(\n\t\t\t\t`${Api_Url}/find?lat=${City.coord.lat}&lon=${City.coord.lon}&appid=${Api_key}&cnt=7&units=metric`\n\t\t\t);\n\t\t\tlet cities = await citiesData.json();\n\n\t\t\tCity.weather.push(ThreeHoulyforecastData.list);\n\t\t\tCity.weather.push(cities.list);\n\n\t\t\tif (City.name) {\n\t\t\t\tthis.setState({\n\t\t\t\t\ttemperature: City.main.temp,\n\t\t\t\t\tcity: City.name,\n\t\t\t\t\tcountry: City.sys.country,\n\t\t\t\t\thumidity: City.main.humidity,\n\t\t\t\t\tdescription: City.weather[0].description,\n\t\t\t\t\tcities: cities.list,\n\t\t\t\t\terr: '',\n\t\t\t\t\tforecast: ThreeHoulyforecastData.list,\n\t\t\t\t\tCondition: City,\n\t\t\t\t\tunits: '°C'\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.setState({\n\t\t\t\t\ttemperature: undefined,\n\t\t\t\t\tcity: undefined,\n\t\t\t\t\tcountry: undefined,\n\t\t\t\t\thumidity: undefined,\n\t\t\t\t\tdescription: undefined,\n\t\t\t\t\tcities: undefined,\n\t\t\t\t\tforecast: undefined,\n\t\t\t\t\terr: City.message,\n\t\t\t\t\tCondition: undefined,\n\t\t\t\t\tunits: undefined\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis.setState({\n\t\t\t\ttemperature: undefined,\n\t\t\t\tcity: undefined,\n\t\t\t\tcountry: undefined,\n\t\t\t\thumidity: undefined,\n\t\t\t\tdescription: undefined,\n\t\t\t\tcities: undefined,\n\t\t\t\tforecast: undefined,\n\t\t\t\tCondition: undefined,\n\t\t\t\terr: 'Please enter the correct data and try again',\n\t\t\t\tunits: undefined\n\t\t\t});\n\t\t}\n\t};\n\n\tweatherConvertor = () => async (e) => {\n\t\tif (e.target.textContent.includes('C', 0)) {\n\t\t\tif (this.state.city && this.state.country) {\n\t\t\t\tthis.setState({\n\t\t\t\t\ttemperature: this.state.Condition.main.temp * 1.8 + 32,\n\t\t\t\t\tunits: '°F'\n\t\t\t\t});\n\t\t\t\te.target.textContent = '°F';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.setState({\n\t\t\t\t\ttemperature: undefined,\n\t\t\t\t\tcity: undefined,\n\t\t\t\t\tcountry: undefined,\n\t\t\t\t\thumidity: undefined,\n\t\t\t\t\tdescription: undefined,\n\t\t\t\t\tcities: undefined,\n\t\t\t\t\tforecast: undefined,\n\t\t\t\t\tCondition: undefined,\n\t\t\t\t\tunits: undefined,\n\t\t\t\t\terr: 'Please enter the correct data and try again'\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis.setState({\n\t\t\t\ttemperature: this.state.Condition.main.temp,\n\t\t\t\tunits: '°C'\n\t\t\t});\n\t\t\te.target.textContent = '°C';\n\t\t}\n\t};\n\n\tbackgroundSelect = () => {\n\t\tif (\n\t\t\t(this.state.units === '°F' && this.state.temperature > 61) ||\n\t\t\t(this.state.units === '°C' && this.state.temperature > 16)\n\t\t) {\n\t\t\treturn 'App warm container-fluid';\n\t\t}\n\t\telse {\n\t\t\treturn 'App  container-fluid';\n\t\t}\n\t};\n\n\tSelectedArea = (city) => {\n\t\tconsole.log(this.state);\n\t\tif (!city) return null;\n\t\t// console.log(city);\n\t\t// console.log(city.sys.country);\n\t\tthis.weatherSearch(city.name, city.sys.country);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className={this.backgroundSelect()}>\n\t\t\t\t<div className='row'>\n\t\t\t\t\t<div className='container'>\n\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t\t<div className='col-sm-12'>\n\t\t\t\t\t\t\t\t<Title />\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className='col-sm-6'>\n\t\t\t\t\t\t\t\t<Search weatherSearch={this.weatherSearch} />\n\n\t\t\t\t\t\t\t\t<Weather\n\t\t\t\t\t\t\t\t\ttemperature={this.state.temperature}\n\t\t\t\t\t\t\t\t\tcity={this.state.city}\n\t\t\t\t\t\t\t\t\tcountry={this.state.country}\n\t\t\t\t\t\t\t\t\thumidity={this.state.humidity}\n\t\t\t\t\t\t\t\t\tdescription={this.state.description}\n\t\t\t\t\t\t\t\t\terr={this.state.err}\n\t\t\t\t\t\t\t\t\tweatherConvertor={this.weatherConvertor}\n\t\t\t\t\t\t\t\t\tunits={this.state.units}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='col-sm-6'>\n\t\t\t\t\t\t\t\t<Condition Condition={this.state.Condition} units={this.state.units} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='col-sm-12'>\n\t\t\t\t\t\t\t\t<Forecast forecast={this.state.forecast} units={this.state.units} />\n\n\t\t\t\t\t\t\t\t<Areas\n\t\t\t\t\t\t\t\t\tcities={this.state.cities}\n\t\t\t\t\t\t\t\t\tSelectedArea={this.SelectedArea}\n\t\t\t\t\t\t\t\t\tunits={this.state.units}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}